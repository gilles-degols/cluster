package net.degols.filesgate.libs.cluster.core

import akka.actor.ActorRef
import net.degols.filesgate.libs.cluster.messages.WorkerTypeInfo
import org.joda.time.DateTime

/**
  * One instance of a WorkerType. Their number can grow up to any number, it will depend on the load of the system.
  * The WorkerId is a unique string generated by the master to easily handle "waiting" instances of WorkerTypes to be started
  */
class Worker(workerId: String, val actorRef: Option[ActorRef]) extends ClusterElement{
  private var _lastPing: DateTime = new DateTime()

  def canEqual(a: Any): Boolean = a.isInstanceOf[Worker]
  override def equals(that: Any): Boolean =
    that match {
      case that: Worker => that.canEqual(this) && this.hashCode == that.hashCode
      case _ => false
    }
  override def hashCode: Int = s"Worker:$workerId".hashCode // We use the workerId to compare object, without the actorRef!
}


object Worker {
  def fromWorkerIdAndActorRef(workerId: String, actorRef: Option[ActorRef]): Worker = {
    val worker = new Worker(workerId, actorRef)
    worker
  }
}